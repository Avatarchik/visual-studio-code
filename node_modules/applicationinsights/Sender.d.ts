/**
* Replacement for the browser Sender class
* uses the batching logic in Javascript Sender.send but sends with node http.request
*/
declare class Sender {
    static TEMPDIR: string;
    private _config;
    private _onSuccess;
    private _onError;
    private _enableCacheOnError;
    private _http;
    private _url;
    private _os;
    private _path;
    private _fs;
    constructor(config: Microsoft.ApplicationInsights.ISenderConfig, onSuccess?: (response: string) => void, onError?: (error: Error) => void);
    send(payload: string): void;
    /**
     * enable caching events locally on error
     */
    enableCacheOnError(): void;
    /**
    * disable caching events locally on error
    */
    disableCacheOnError(): void;
    /**
     * Stores the payload as a json file on disk in the temp direcotry
     */
    private _storeToDisk(payload);
    /**
     * Check for temp telemetry files
     * reads the first file if exist, deletes it and tries to send its load
     */
    private _sendFirstFileOnDisk();
    private _onErrorHelper(error);
}
export = Sender;
